{% extends "base.html.twig" %}

{% block title %}Report{% endblock %}

{% block body %}
    <h1>Report</h1>

    <ul>
        <li><a href="{{ path(app.request.attributes.get('_route')) }}#kmom01">Kmom01</a></li>
        <li><a href="{{ path(app.request.attributes.get('_route')) }}#kmom02">Kmom02</a></li>
        <li><a href="{{ path(app.request.attributes.get('_route')) }}#kmom03">Kmom03</a></li>
    </ul>
    
    <h2 id="kmom01">Kmom01</h2>
    <p><b>Berätta kort om dina förkunskaper och tidigare erfarenheter kring objektorientering.</b></p>
    <p>Jag har gått kursen oopython där vi fick arbeta objektorienterat. Där skapade vi exempelvis ett yahtzee spel. Det var mycket lärorikt. Utöver det har man i andra kursen kunnat återanvända sin kunskaper på området.</p>

    <p><b>Berätta kort om PHPs modell för klasser och objekt. Vilka är de grunder man behöver veta/förstå för att kunna komma igång och skapa sina första klasser?</b></p>
    <p>PHPs modell för klasser och objekt använder sig av klasser (class) för att skapa en mall för ett objekt. Och för att skapa en instans av ett objekt används new. Utöver detta bör man veta hur man ska hantera metoder i en klass, kunna använda inheritance etc. Utöver detta kan det vara värt att lära sig om public,private eller protected egenskaper eller metoder i klasser. I slutet av dagen liknar det mycket den objektorienterad kod vi skrivit i python och js. <p>
    
    <p><b>Reflektera kort över den kodbas, koden, strukturen som användes till uppgiften me/report, hur uppfattar du den?</b></p>
    <p>Kodbasen är strukturerad på samma sätt som symfony mallen. Den fungerar bra eftersom projektet inte är storskaligt i min mening. Det är lätt att följa med i strukturen och det är enkelt att hitta de olika delarna av projektet. Jag kan tycka om kodbaser med "File-based routing", typ next.js. Symfony är dock mer fokuserat på back-end som jag förstår det, och att file-based routing mer funkar på en fullstack-ramverk. Jag tror det sannolikt kommer visa sig varför denna kodbas kommer fungera väl med MVC i senare kursmoment.</p>

    <p><b>Med tanke på artikeln “PHP The Right Way”, vilka delar in den finner du extra intressanta och värdefulla? Är det några särskilda områden som du känner att du vill veta mer om? Lyft fram några delar av artikeln som du känner mer värdefulla.</b></p>
    <p>En sak som jag tyckte var intressant var att det stod att PHP var ett "“exception-light” programming language.". Jag har inte stött på denna term tidigare och hade inte heller noterat att PHP gör allt för att inte kasta errors och sluta köra, jämfört med exempelvis python. Om något är särskilt viktigt i artikeln lär det först vara PHPDOC delen, eftersom att kommentering av kod är essentiellt för att kunna underhålla en kodbas i framtiden. Och särskilt för PHP gäller att läsa delen om "Language Highlights", där dem visar på åtskilliga skillnader mot andra språk.</p>

    <p><b>Vilken är din TIL för detta kmom?</b></p>
    <p>Mitt TIL är symfony som vi fått sätta upp och starta oss att lära oss om. Det var kul att få återanvända TWIG och PHP för projektet som vi arbetat med förut.</p>
    <h2 id="kmom02">Kmom02</h2>
    <p>Redovisningstext...</p>

    <h2 id="kmom03">Kmom03</h2>
    <p>Redovisningstext...</p>

    <h2 id="kmom04">Kmom04</h2>
    <p>Redovisningstext...</p>

    <h2 id="kmom04">Kmom05</h2>
    <p>Redovisningstext...</p>
{% endblock %}